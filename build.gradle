buildscript {
    ext {
        springBootVersion = '2.0.0.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group 'com.camas'
version '0.8.5'

jar {
    baseName = 'chorusdigital'
    version = '0.8.5'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
    maven {
        url "http://jasperreports.sourceforge.net/maven2/"
    }
    maven {
        url 'http://jaspersoft.artifactoryonline.com/jaspersoft/third-party-ce-artifacts'
    }
}


dependencies {
    //Basic web parts
    compile('org.springframework.boot:spring-boot-starter-web')
    compile("org.springframework.boot:spring-boot-starter-actuator")

    //Database
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile("com.h2database:h2")

    //Web UI
    compile('org.springframework.boot:spring-boot-starter-thymeleaf')
    compile 'com.fasterxml.jackson.core:jackson-databind'
    compile 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml'
    compile("org.webjars:bootstrap:4.0.0")
    compile("org.webjars:jquery:3.3.1")

    //Security
    compile 'org.springframework.boot:spring-boot-starter-security'
    compile 'org.thymeleaf.extras:thymeleaf-extras-springsecurity4'

    //Testing
    testCompile('org.springframework.boot:spring-boot-starter-test')

    //Reporting
    compile 'net.sf.jasperreports:jasperreports'
    compile 'net.sf.jasperreports:jasperreports-fonts:4.0.0'
    compile 'ar.com.fdvs:DynamicJasper:5.1.1'
    compile 'ar.com.fdvs:DynamicJasper-core-fonts:1.0'
}


task wrapper(type: Wrapper) {
    gradleVersion = '4.6'
}
// Makes the jar executable for running as a service
bootJar {
    launchScript()
}

//Allows for setting profile environment variable on the command line
bootRun {
    systemProperties System.properties
}

test {
    useJUnit {
        includeCategories 'com.camas.chorusdigital.UnitTest'
    }
}

task integrationTest(type: Test) {
    useJUnit {
        includeCategories 'com.camas.chorusdigital.IntegrationTest'
    }
}

